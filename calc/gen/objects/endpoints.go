// Code generated by goa v3.2.5, DO NOT EDIT.
//
// objects endpoints
//
// Command:
// $ goa gen calc/design

package objects

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "objects" service endpoints.
type Endpoints struct {
	Show   goa.Endpoint
	Create goa.Endpoint
}

// NewEndpoints wraps the methods of the "objects" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Show:   NewShowEndpoint(s),
		Create: NewCreateEndpoint(s),
	}
}

// Use applies the given middleware to all the "objects" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Show = m(e.Show)
	e.Create = m(e.Create)
}

// NewShowEndpoint returns an endpoint function that calls the method "show" of
// service "objects".
func NewShowEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ShowPayload)
		res, err := s.Show(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedObjectMedia(res, "full")
		return vres, nil
	}
}

// NewCreateEndpoint returns an endpoint function that calls the method
// "create" of service "objects".
func NewCreateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ObjectPost)
		res, view, err := s.Create(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedObjectMedia(res, view)
		return vres, nil
	}
}
